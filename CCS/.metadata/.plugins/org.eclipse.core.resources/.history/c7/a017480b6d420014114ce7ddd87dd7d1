#include <msp430xG46x.h>
/*
 * main.c
 */

//высокие частоты
const int P1 = 27; //для частоты 1209 Гц
const int P2 = 24; //для частоты 1336 Гц
const int P3 = 22; //для частоты 1477 Гц
const int P4 = 20; //для частоты 1633 Гц

/*для того что бы был 50% рабочий цикл*/
const int D1 = 13;
const int D2 = 12;
const int D3 = 11;
const int D4 = 10;

//низкие частоты
const int P5 = 47; //для частоты 697 Гц
const int P6 = 42; //для частоты 770 Гц
const int P7 = 38; //для частоты 852 Гц
const int P8 = 34; //для частоты 941 Гц

/*для того что бы был 50% рабочий цикл*/
const int D5 = 23;
const int D6 = 21;
const int D7 = 19;
const int D8 = 17;

//******************************************************************
// Port1 Interrupt Service Rotine
//******************************************************************
#pragma vector=PORT1_VECTOR
__interrupt void PORT1_ISR(void)
{
	if (P1IFG == 0x01)                        // SW1 interrupt
	{
		//обрабатываем нажатие 1 кнопки
	}

	if (P1IFG == 0x02)                        // SW2 interrupt
	{
		//обрабатываем нажатие 2 кнопки
	}

	P1IFG = 0x00;	                             // clean all pending interrupts
}

//******************************************************************
// Port1 Interrupt Service Rotine
//******************************************************************

void SetTimers(char sym)
{

	TAR = 0; // Clean Timer A counter

	if (sym == '1') {

	}

}

int main(void)
{

	volatile unsigned int i;

	WDTCTL = WDTPW | WDTHOLD;	// Stop watchdog timer
	FLL_CTL0 |= XCAP14PF;       // Configure load caps

	// Wait for xtal to stabilize
	do
	{
		IFG1 &= ~OFIFG;      // Clear OSCFault flag
		for (i = 0x47FF; i > 0; i--)
			;   // Time for flag to set
	}
	while ((IFG1 & OFIFG)); // OSCFault flag still set?

	/*****************************************************/
	/*Конфигурация кнопок*/
	/*****************************************************/
	/* SW1 and SW2 ports configuration
	 * Это конфигурация кнопок. Используются прерывания
	 */
	P1SEL &= ~0x03;                                   // P1.0 and P1.1 I/O ports
	P1DIR &= ~0x03;                              // P1.0 and P1.1 digital inputs
	P1IFG = 0x00;                                // clear all interrupts pending
	P1IE |= 0x03;                                      // enable port interrupts

	/*****************************************************/
	/*Конфигурация кнопок*/
	/*****************************************************/

	//конфигурируем пины
	//P1DIR |= 0x04; // P1.2 output
	//P1SEL |= 0x04; // P1.2 TA1 option
	return 0;
}
